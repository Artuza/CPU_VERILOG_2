`timescale 1ns / 1ps

module tb_PC();

    // Parámetros y señales para el testbench
    reg clk;
    reg reset;
    reg [31:0] init_addr;
    wire [31:0] pc_out;

    // Instanciación del PC
    ProgramCounter PC_inst (
        .clk(clk),
        .reset(reset),
        .init_addr(init_addr),
        .pc_out(pc_out)
    );

    // Generación de clock
    always #5 clk = ~clk;

    // Inicialización de señales
    initial begin
        clk = 0;
        reset = 1; // Inicialmente activamos el reset
        init_addr = 32'h00000000; // Dirección inicial del programa

        // Esperamos un ciclo de clock
        #10 reset = 0;

        // Simulación de secuencia de operación
        // Caso 1: Sin reset, dirección inicial 0x100
        init_addr = 32'h00000100;
        #100; // Esperamos algunos ciclos

        // Caso 2: Reset activado de nuevo, dirección inicial 0x200
        reset = 1;
        #10 reset = 0;
        init_addr = 32'h00000200;
        #100; // Esperamos algunos ciclos

        // Puedes añadir más casos de prueba según sea necesario

        // Terminamos la simulación
        $finish;
    end

endmodule
